{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "lucu",
  "patterns": [
    {
      "include": "#declarations"
    },
    {
      "include": "#expressions"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#characters"
    },
    {
      "include": "#comments"
    },
    {
      "include": "#numeric"
    },
    {
      "include": "#annotation"
    },
    {
      "include": "#call"
    }
  ],
  "repository": {
    "genericparens": {
      "begin": "\\(",
      "end": "\\)",
      "patterns": [
        {
          "include": "#genericparens"
        },
        {
          "include": "#keywords"
        },
        {
          "match": "(\\b|(?<=\\.))[_a-zA-Z][_a-zA-Z0-9]*(?![_a-zA-Z0-9.])",
          "name": "entity.name.type.lucu"
        },
        {
          "include": "$self"
        }
      ]
    },
    "declarations": {
      "patterns": [
        {
          "match": "(effect|impl|type|struct)[\\s]+([_a-zA-Z][_a-zA-Z0-9]*\\.)?([_a-zA-Z][_a-zA-Z0-9]*)\\b",
          "captures": {
            "1": { "name": "keyword.control.lucu" },
            "3": { "name": "entity.name.type.lucu" }
          }
        },
        {
          "begin": "(fun)\\s+([_a-zA-Z][_a-zA-Z0-9]*)\\s*",
          "end": "$",
          "captures": {
            "1": { "name": "keyword.control.lucu" },
            "2": { "name": "entity.name.function.lucu" }
          },
          "patterns": [
            {
              "begin": "(?<=(fun)\\s+([_a-zA-Z][_a-zA-Z0-9]*)\\s*)\\(",
              "end": "\\)",
              "patterns": [
                {
                  "include": "#genericparens"
                },
                {
                  "begin": "\\s*(mut\\s)?\\s*[_a-zA-Z][_a-zA-Z0-9]*\\s+",
                  "end": "(?=,|\\))",
                  "captures": {
                    "1": { "name": "keyword.control.lucu" }
                  },
                  "patterns": [
                    {
                      "include": "#genericparens"
                    },
                    {
                      "include": "#keywords"
                    },
                    {
                      "match": "(\\b|(?<=\\.))[_a-zA-Z][_a-zA-Z0-9]*(?![_a-zA-Z0-9.])",
                      "name": "entity.name.type.lucu"
                    },
                    {
                      "include": "$self"
                    }
                  ]
                }
              ]
            },
            {
              "begin": "\\/",
              "end": "$",
              "patterns": [
                {
                  "include": "#genericparens"
                },
                {
                  "include": "#keywords"
                },
                {
                  "match": "(\\b|(?<=\\.))[_a-zA-Z][_a-zA-Z0-9]*(?![_a-zA-Z0-9.])",
                  "name": "entity.name.type.lucu"
                },
                {
                  "include": "$self"
                }
              ]
            },
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "expressions": {
      "patterns": [
        {
          "begin": "\\b(let|mut)\\s+[_a-zA-Z][_a-zA-Z0-9]*",
          "end": "=",
          "captures": {
            "1": { "name": "keyword.control.lucu" }
          },
          "patterns": [
            {
              "include": "#genericparens"
            },
            {
              "include": "#keywords"
            },
            {
              "match": "(\\b|(?<=\\.))[_a-zA-Z][_a-zA-Z0-9]*(?![_a-zA-Z0-9.])",
              "name": "entity.name.type.lucu"
            },
            {
              "include": "$self"
            }
          ]
        },
        {
          "begin": "\\b(as)\\s+(((\\??\\s*\\^)|\\[\\s*\\d*\\s*\\])\\s*)*(?!\\s|impl)",
          "end": "(?<=\\))|(?![_a-zA-Z0-9(])",
          "captures": {
            "1": { "name": "keyword.control.lucu" },
            "2": { "name": "constant.numeric.lucu" }
          },
          "patterns": [
            {
              "include": "#genericparens"
            },
            {
              "include": "#keywords"
            },
            {
              "match": "(\\b|(?<=\\.))[_a-zA-Z][_a-zA-Z0-9]*(?![_a-zA-Z0-9.])",
              "name": "entity.name.type.lucu"
            },
            {
              "include": "$self"
            }
          ]
        },
        {
          "begin": "(@sizeof|@alignof)\\s+(((\\??\\s*\\^)|\\[\\s*\\d*\\s*\\])\\s*)*",
          "end": "(?<=\\))|(?![_a-zA-Z0-9(])",
          "captures": {
            "1": { "name": "string.unquoted.annotation.lucu" },
            "2": { "name": "constant.numeric.lucu" }
          },
          "patterns": [
            {
              "include": "#genericparens"
            },
            {
              "include": "#keywords"
            },
            {
              "match": "(\\b|(?<=\\.))[_a-zA-Z][_a-zA-Z0-9]*(?![_a-zA-Z0-9.])",
              "name": "entity.name.type.lucu"
            },
            {
              "include": "$self"
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control.lucu",
          "match": "\\b(if|else|mut|let|with|loop|break|yeet|const|as|do|move|import|fun|try|cast|struct|type|effect|impl)\\b"
        },
        {
          "name": "constant.language.lucu",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.language.lucu",
          "match": "\\b(int|uint|str|usize|isize|uptr|iptr|bool|unit|never|i8|i16|i32|i64|u8|u16|u32|u64|true|false)\\b"
        },
        {
          "name": "constant.character.escape.lucu",
          "match": "`[_a-zA-Z0-9]+"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.lucu",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.lucu",
          "match": "\\\\."
        }
      ]
    },
    "characters": {
      "name": "string.quoted.single.lucu",
      "begin": "'",
      "end": "'",
      "patterns": [
        {
          "name": "constant.character.escape.lucu",
          "match": "\\\\."
        }
      ]
    },
    "comments": {
      "patterns": [
          {
              "match": "(#.*$)",
              "captures": {
                "1": { "name": "comment.line.lucu" }
              }
          }
      ]
    },
    "numeric": {
      "patterns": [
        {
          "match": "\\b(?:-?([0-9]+\\.?[0-9]*)|(?:\\.[0-9]+))\\b",
          "name": "constant.numeric.lucu"
        },
        {
          "match": "\\??\\s*\\^",
          "name": "constant.numeric.lucu"
        }
      ]
    },
    "annotation": {
      "patterns": [
        {
          "match": "@(foreign|capability|alignof|sizeof)\\b",
          "name": "string.unquoted.annotation.lucu"
        }
      ]
    },
    "call": {
      "name": "entity.name.function.lucu",
      "match": "\\b([_a-zA-Z][_a-zA-Z0-9]*)\\s*\\("
    }
  },
  "scopeName": "source.lucu"
}